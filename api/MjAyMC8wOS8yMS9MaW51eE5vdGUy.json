{"title":"Linux学习笔记#2：docker安装和使用","date":"2020-09-21T07:28:03.000Z","date_formatted":{"ll":"Sep 21, 2020","L":"09/21/2020","MM-DD":"09-21"},"author":"Birchs","thumbnail":"https://cdn.wardzhou.art/img/20200921142034.png","link":"2020/09/21/LinuxNote2","comments":true,"tags":["Docker","Linux"],"categories":["教程"],"updated":"2020-12-14T15:10:11.493Z","content":"<h2 id=\"为什么选择docker？\">为什么选择Docker？<a title=\"#为什么选择docker？\" href=\"#为什么选择docker？\"></a></h2>\n<p>不同的平台，不同应用的依赖项错综复杂，通过docker能够提供开箱即用的体验，并且能够快捷的进行维护，迁移成本低，易用性高。</p>\n<h2 id=\"centos-8-下的docker-安装\">CentOS 8 下的Docker 安装<a title=\"#centos-8-下的docker-安装\" href=\"#centos-8-下的docker-安装\"></a></h2>\n<p>笔者原用的是CentOS 6的发行版本，安装docker时遇到诸多麻烦，升级内核又较为繁琐，故直接备份数据换成了较新的发行版本。</p>\n<p>可以使用以下命令自动化安装Docker</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https:&#x2F;&#x2F;get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure>\n<p>或者使用国内</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sSL https:&#x2F;&#x2F;get.daocloud.io&#x2F;docker | sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"拉取你的第一个镜像\">拉取你的第一个镜像<a title=\"#拉取你的第一个镜像\" href=\"#拉取你的第一个镜像\"></a></h2>\n<p>使用<code>docker pull</code>来拉取需要的镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull hello-world</span><br></pre></td></tr></table></figure>\n<p>在docker hub中，可以快速浏览并检索所需的docker，例如nginx等，只需要一行命令就能开箱即用。</p>\n<p><img src=\"https://cdn.wardzhou.art/img/20200921134709.png\" alt=\"\" class=\"φbs\"></p>\n<p>拉取成功后来验证是否成功</p>\n<p><code>docker image ps</code>拉取本地的镜像列表</p>\n<p>如果能够看到刚刚的hello-world说明你的docker已经安装好，并且能够使用啦~</p>\n<h2 id=\"运行容器\">运行容器<a title=\"#运行容器\" href=\"#运行容器\"></a></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run [参数] 镜像名 [命令] [ARG...]</span><br></pre></td></tr></table></figure>\n<p>可选参数</p>\n<div class=\"φbw\"><ul>\n<li><code>-a stdin</code>: 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；</li>\n<li><code>-d</code>: 后台运行容器，并返回容器ID；</li>\n<li><code>-i</code>: 以交互模式运行容器，通常与 -t 同时使用；</li>\n<li><code>-P</code>: 随机端口映射，容器内部端口<strong>随机</strong>映射到主机的端口</li>\n<li><code>-p</code>: 指定端口映射，格式为：<strong>主机(宿主)端口:容器端口</strong></li>\n<li>`-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；</li>\n<li><code>-name=&quot;nginx-lb&quot;</code>: 为容器指定一个名称；</li>\n<li><code>--dns 8.8.8.8</code>: 指定容器使用的DNS服务器，默认和宿主一致；</li>\n<li><code>--dns-search example.com</code>: 指定容器DNS搜索域名，默认和宿主一致；</li>\n<li><code>-h &quot;mars&quot;</code>: 指定容器的hostname；</li>\n<li><code>-e username=&quot;ritchie&quot;:</code> 设置环境变量；</li>\n<li><code>--env-file=[]</code>: 从指定文件读入环境变量；</li>\n<li><code>--cpuset=&quot;0-2&quot; or --cpuset=&quot;0,1,2&quot;</code>: 绑定容器到指定CPU运行；</li>\n<li><code>-m </code>:设置容器使用内存最大值；</li>\n<li><code>--net=&quot;bridge&quot;</code>: 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型；</li>\n<li><code>--link=[]</code>: 添加链接到另一个容器；</li>\n<li><code>--expose=[]</code>: 开放一个端口或一组端口；</li>\n<li><code>--volume , -v</code>: 绑定一个卷</li>\n</ul>\n</div><h2 id=\"一起来搭建一个我的世界服务器\">一起来搭建一个我的世界服务器<a title=\"#一起来搭建一个我的世界服务器\" href=\"#一起来搭建一个我的世界服务器\"></a></h2>\n<p>拉取image</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull itzg&#x2F;minecraft-bedrock-server</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>pull的时候可以指定版本，默认为<code>:latest</code></p>\n<p>本文示例用的是基岩版服务器，另寻java版请点此(链接)[<a href=\"https://hub.docker.com/r/itzg/minecraft-server\">https://hub.docker.com/r/itzg/minecraft-server</a>]</p>\n</blockquote>\n<p>创建并运行一个新的容器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mc -d -it -e EULA&#x3D;TRUE -p 19132:19132&#x2F;udp -p 19132:19132 itzg&#x2F;minecraft-bedrock-server</span><br></pre></td></tr></table></figure>\n<p>稍等片刻查看运行日志，如果显示运行成功，就可以通过游戏客户端访问服务器了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker logs mc</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>未完待续…</p>\n</blockquote>\n","prev":{"title":"喵~ Meow~","link":"2020/09/26/meow"},"next":{"title":"Linux学习笔记#1：复制文件cp、docker cp与scp","link":"2020/09/20/LinuxNote1"},"plink":"http://wardzhou.art/2020/09/21/LinuxNote2/","toc":[{"id":"为什么选择docker？","title":"为什么选择Docker？","index":"1"},{"id":"centos-8-下的docker-安装","title":"CentOS 8 下的Docker 安装","index":"2"},{"id":"拉取你的第一个镜像","title":"拉取你的第一个镜像","index":"3"},{"id":"运行容器","title":"运行容器","index":"4"},{"id":"一起来搭建一个我的世界服务器","title":"一起来搭建一个我的世界服务器","index":"5"}],"reward":true,"copyright":{"author":"Birchs","license":"Attribution-NonCommercial-NoDerivatives 4.0 International(<a href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","updated":"December 14, 2020"},"reading_time":"720 words in 5 min"}
{"title":"Nginx Proxy Manager——小而美的多容器转发方案","date":"2021-02-27T15:57:17.000Z","date_formatted":{"ll":"Feb 27, 2021","L":"02/27/2021","MM-DD":"02-27"},"author":"白桦","thumbnail":"https://cdn.wardzhou.art/img/NginXProxyManagerCover.webp","link":"2021/02/27/NginXProxyManager","comments":true,"tags":["Docker","Nginx"],"categories":["教程"],"updated":"2021-02-27T16:04:16.886Z","content":"<p>距离上次把博客改用 docker 部署已经过去快半年了，旧的服务器性能有点过剩（ <s>续不起了</s> ），所以另购置了台新的云主机，考虑到备案迁移的问题，我还是选择了同一家供应商，免除了再次申请备案信息更改的麻烦。</p>\n<p>我之前的主机上跑了三个容器，一个是 Nginx 用来部署博客，然后一个 Trilium 云笔记本再加上一个 Minecraft 服务器。解析的域名都是同一个，分别用不同的端口访问。这真是一点不🆒。</p>\n<p>那么有没有办法通过二级域名分别访问指定端口的容器呢？如果还能一键部署 SSL 就更妙了。那么就要请出本篇的主角：<a href=\"https://nginxproxymanager.com\" target=\"_blank\">Nginx Proxy Manager</a></p>\n<p>Nginx Proxy Manager 实际上就是一个带前端管理界面的 Nginx 服务器，通过Let’s encrypt 来自动申请 SLL 证书并自动部署，反向代理你所需要的容器，甚至是任何目的地，让一个不懂 Nginx 的小白也能轻松配置。</p>\n<p>本篇文章就来简单介绍一下在 Cent 8.3 下如何部署。</p>\n<h2 id=\"1.-配置环境\">1. 配置环境<a title=\"#1.-配置环境\" href=\"#1.-配置环境\"></a></h2>\n<h3 id=\"1.1-安装-docker\">1.1 安装 docker<a title=\"#1.1-安装-docker\" href=\"#1.1-安装-docker\"></a></h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dnf install docker-ce --nobest</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置自动启动\">配置自动启动<a title=\"#配置自动启动\" href=\"#配置自动启动\"></a></h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl enable --now docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"1.2-安装-docker-compose\">1.2 安装 docker-compose<a title=\"#1.2-安装-docker-compose\" href=\"#1.2-安装-docker-compose\"></a></h3>\n<p>下载 Docker Compose</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>\n<p>修改文件的权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>\n<h3 id=\"1.3-更改镜像源\">1.3 更改镜像源<a title=\"#1.3-更改镜像源\" href=\"#1.3-更改镜像源\"></a></h3>\n<p>内地访问 Docker Hub 的速度慢得可怕，所以我建议可以选择用国内的镜像源替代。如果你用的是阿里的服务，那么可以在控制台申请一个 docker 加速的网址，替换到文件里即可。下面的代码中用的是网易和百度的源。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [</span><br><span class=\"line\">    &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class=\"line\">    &quot;https://mirror.baidubce.com&quot;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"2.-编写-docker-compose.xml\">2. 编写 Docker Compose.xml<a title=\"#2.-编写-docker-compose.xml\" href=\"#2.-编写-docker-compose.xml\"></a></h2>\n<p>先在任意位置创建一个文件夹，然后创建 <code>docker-compose.yml</code> 文件，用于部署容器。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home/</span><br><span class=\"line\">mkdir myapp</span><br><span class=\"line\">cd myapp</span><br><span class=\"line\">vim docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p>在 vim 中 <code>:i</code> 把写好的文配置直接粘贴进去，esc 退出插入模式，<code>:w</code> 保存文件然后运行 <code>:q</code> 退出编辑器。</p>\n<p>下面是我的配置文件。</p>\n<figure class=\"highlight yml\"><figcaption><span>docker-compose.yml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3.7&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">app:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"comment\"># Public HTTP Port:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;80:80&#x27;</span></span><br><span class=\"line\">      <span class=\"comment\"># Public HTTPS Port:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;443:443&#x27;</span></span><br><span class=\"line\">      <span class=\"comment\"># Admin Web Port:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;81:81&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">DB_SQLITE_FILE:</span> <span class=\"string\">&quot;/data/database.sqlite&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./data:/data</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./letsencrypt:/etc/letsencrypt</span></span><br><span class=\"line\">  <span class=\"attr\">nginx:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">&#x27;nginx&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;4007:80&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">/home/hexoBlog:/usr/share/nginx/html</span></span><br><span class=\"line\">  <span class=\"attr\">note:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">&#x27;zadam/trilium:latest&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;4005:8080&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">/home/trilium-data:/root/trilium-data</span></span><br><span class=\"line\">  <span class=\"attr\">mc:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">&#x27;itzg/minecraft-server&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">EULA:</span> <span class=\"string\">&#x27;TRUE&#x27;</span></span><br><span class=\"line\">      <span class=\"attr\">ENABLE_AUTOPAUSE:</span> <span class=\"string\">&#x27;TRUE&#x27;</span></span><br><span class=\"line\">      <span class=\"attr\">MODE:</span> <span class=\"string\">&#x27;survival&#x27;</span></span><br><span class=\"line\">      <span class=\"attr\">LEVEL:</span> <span class=\"string\">&#x27;AfterWorld&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;4008:25565&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">/home/minecraft:/data</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>在文件夹下继续运行 <code>docker-compose up -d</code> 即可部署。</p>\n<p>部署完毕后，你就可以通过 <code>docker container ls</code> 查看容器的运行情况。</p>\n<p>到这里，工作已经运行大半，接下来我们就要配置域名解析和转发。</p>\n<h2 id=\"3.-配置域名\">3. 配置域名<a title=\"#3.-配置域名\" href=\"#3.-配置域名\"></a></h2>\n<p>首先你需要去服务器安全组配置中，把 <code>81</code> 端口开放。然后转到你的域名提供商控制台，把需要解析的域名全部指向你的服务器 <code>IP</code>。然后通过域名或者 IP:81 在浏览器直接登陆 Nginx Proxy Manager 的前端界面。</p>\n<p>注意，默认的登陆邮箱和密码是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">admin@example.com</span><br><span class=\"line\">changeme</span><br></pre></td></tr></table></figure>\n<p>登陆成功后，系统会要求你修改新的密码。完成后，就可以开始配置了。</p>\n<p><img src=\"https://cdn.wardzhou.art/img/NginXProxyManagerConsole.webp\" alt=\"\" class=\"φbs\"></p>\n<p>点击 New Proxy Host 创建一个代理规则，在 Domin Names 中填写一个或多个你想要用来访问该容器的域名。</p>\n<p>如果你没有特殊配置 https ，这里使用默认的 http 第二栏的 Forward Hostname / IP 处，填写容器所在 Docker 网桥的虚拟 IP，这个 IP 可以通过下面的命令查到。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network inspect bridge</span><br></pre></td></tr></table></figure>\n<p>在结果中，找到 <code>IPAM-Config-Gateway</code> 节点，后面的 IP 就是我们所需要的。</p>\n<blockquote>\n<p>如果你在 <code>docker-compose.yml</code> 自定义了一个网桥，那么请用你自定义的网桥名称替换掉上面命令中的 <code>bridge</code> 参数。</p>\n</blockquote>\n<p>而端口，则是你最开始配置中对应容器<strong>暴漏</strong>在外面的端口。</p>\n<p>如果你不需要为网站配置 SSL 的话到这里，点击 Save 就可以了。否则，请点击 SSL 选项卡，证书一栏选择申请一个新的 SSL 证书，填写邮件地址，同意协议即可。如果需要强制 https 访问，请打开 Force SSL 选项。最后点 Save 就可以了。</p>\n<p>其余的容器的配置也都是一样的。</p>\n<p>最后，你可能注意到了，这个前端页面并不安全，我们需要给他自己也套个代理（<s>套娃警告</s>）。</p>\n<p>配置同刚刚的例子差不多，端口号改为 <code>81</code> 即可。</p>\n<p>用域名测试，能够正常访问的话，就可以在安全组关掉 <code>81</code> 端口的访问了。</p>\n<p>到这里就大功告成咯～</p>\n<p>完整的文档你可以在 <a href=\"https://nginxproxymanager.com\" target=\"_blank\">Nginx Proxy Manager</a> 的官网找到，另外还有一个 Youtube 博主做的<a href=\"https://www.youtube.com/watch?v=RBVcnxTiIL0&amp;t=1731s\" target=\"_blank\">视频</a>，希望能对你有所帮助。</p>\n<hr>\n<h4 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h4>\n<p>[1] <a href=\"https://blog.csdn.net/qq_36380748/article/details/111560682\" target=\"_blank\">写代码的厨师, 2020.Docker Compose的安装和使用.CSDN</a><br>\n[2] <a href=\"https://cloud.tencent.com/developer/article/1626829\" target=\"_blank\">雪梦科技, 2020.如何在 RHEL 8 / CentOS 8上安装 Docker CE.腾讯云社区</a></p>\n","prev":{"title":"西风","link":"2021/03/02/WestWind"},"next":{"title":"无风的夜","link":"2021/02/15/WindlessNight"},"plink":"http://wardzhou.art/2021/02/27/NginXProxyManager/","toc":[{"id":"1.-配置环境","title":"1. 配置环境","index":"1","children":[{"id":"1.1-安装-docker","title":"1.1 安装 docker","index":"1.1"},{"id":"1.2-安装-docker-compose","title":"1.2 安装 docker-compose","index":"1.2"},{"id":"1.3-更改镜像源","title":"1.3 更改镜像源","index":"1.3"}]},{"id":"2.-编写-docker-compose.xml","title":"2. 编写 Docker Compose.xml","index":"2"},{"id":"3.-配置域名","title":"3. 配置域名","index":"3"}],"reward":true,"copyright":{"author":"白桦","license":"Attribution-NonCommercial-NoDerivatives 4.0 International(<a href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","updated":"February 28, 2021"},"reading_time":"1429 words in 10 min"}